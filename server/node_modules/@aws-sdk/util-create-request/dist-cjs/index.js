var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  createRequest: () => createRequest
});
module.exports = __toCommonJS(src_exports);
async function createRequest(client, command) {
  const interceptMiddleware = /* @__PURE__ */ __name((next) => async (args) => {
    return { output: { request: args.request }, response: void 0 };
  }, "interceptMiddleware");
  const clientStack = client.middlewareStack.clone();
  clientStack.add(interceptMiddleware, {
    step: "build",
    priority: "low"
  });
  const handler = command.resolveMiddleware(clientStack, client.config, void 0);
  return await handler(command).then((output) => output.output.request);
}
__name(createRequest, "createRequest");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  createRequest
});

